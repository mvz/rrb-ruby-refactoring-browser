#!/usr/bin/env ruby

require 'rrb/completion'

if $0 == __FILE__ then
  
  def print_usage
    print "\
Usage: rrb_compinfo INFOTYPE IOTYPE

  INFOTYPE
    * --methods-local-vars
    * --methods
    * --classes
    * --classes-instance-vars
    * --gloval-vars
    * --constants
  IOTYPE
    * --stdin-stdout
    * --filein-stdout FILES..
"
  end
  
  if ARGV.size == 0 || ARGV[0] == '--help' then
    print_usage
    exit
  end

  infotype = ARGV.shift

  case ARGV.shift
  when '--stdin-stdout'
    script = RRB::Script.new_from_io( STDIN )
  when '--filein-stdout'
    script = RRB::Script.new_from_filenames( *ARGV )
  end

  case infotype
  when '--methods-local-vars'
    script.refactable_methods.each do |method|
      print method.fullname, ';'
      print method.local_vars.to_a.join(",")
      print "\n"
    end
  when '--methods'
    Set.new( script.refactable_methods.map{|method| method.name} ).each do |method|
      print method,","
    end
    print "\n"
  when '--methods-fullname'
    script.refactable_methods.each do |method|
      print method.fullname, ','
    end
  when '--classes'
    script.refactable_classes.each do |klass|
      print klass, ","
    end
  when '--classes-instance-vars'
    script.refactable_classes_instance_vars.each do |classname,ivars|
      print classname, ';', ivars.to_a.join(','), "\n"
    end
  when '--global-vars'
    script.refactable_global_vars.each do |var|
      print var, ","
    end
  when '--constants'
    script.refactable_consts.each do |const|
      print const, ","
    end
  end  
end
